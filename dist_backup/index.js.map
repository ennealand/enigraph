{"version":3,"file":"index.js","sources":["../src/lib/types.ts","../node_modules/preact/jsx-runtime/dist/jsxRuntime.module.js","../src/lib/graph/alphabet/edges/edge-common.tsx","../src/lib/graph/alphabet/edges/edge.tsx","../src/lib/graph/alphabet/nodes/alphabet.tsx","../src/lib/graph/alphabet/nodes/node.tsx","../src/lib/graph/options.ts","../src/lib/graph/graph.tsx","../src/lib/index.tsx"],"sourcesContent":["export enum NodeType {\n\tUnknown = 'unknown',\n\tConst = 'const',\n\tConstTuple = 'const.tuple',\n\tConstStruct = 'const.struct',\n\tConstRole = 'const.role',\n\tConstNorole = 'const.norole',\n\tConstClass = 'const.class',\n\tConstAbstract = 'const.abstract',\n\tConstMaterial = 'const.material',\n\tVar = 'var',\n\tVarTuple = 'var.tuple',\n\tVarStruct = 'var.struct',\n\tVarRole = 'var.role',\n\tVarNorole = 'var.norole',\n\tVarClass = 'var.class',\n\tVarAbstract = 'var.abstract',\n\tVarMaterial = 'var.material'\n}\n\nexport enum EdgeType {\n\tUCommon = 'UCommon',\n\tDCommon = 'DCommon',\n\tUCommonConst = 'UCommonConst',\n\tDCommonConst = 'DCommonConst',\n\tUCommonVar = 'UCommonVar',\n\tDCommonVar = 'DCommonVar',\n\tAccess = 'Access',\n\tAccessConstPosPerm = 'AccessConstPosPerm',\n\tAccessConstNegPerm = 'AccessConstNegPerm',\n\tAccessConstFuzPerm = 'AccessConstFuzPerm',\n\tAccessConstPosTemp = 'AccessConstPosTemp',\n\tAccessConstNegTemp = 'AccessConstNegTemp',\n\tAccessConstFuzTemp = 'AccessConstFuzTemp',\n\tAccessVarPosPerm = 'AccessVarPosPerm',\n\tAccessVarNegPerm = 'AccessVarNegPerm',\n\tAccessVarFuzPerm = 'AccessVarFuzPerm',\n\tAccessVarPosTemp = 'AccessVarPosTemp',\n\tAccessVarNegTemp = 'AccessVarNegTemp',\n\tAccessVarFuzTemp = 'AccessVarFuzTemp',\n}\n\nexport interface EdgeProps {\n\tx1: number\n\ty1: number\n\tx2: number\n\ty2: number\n\tnoselect?: boolean\n\tclass?: string\n}\n\nexport interface INode {\n\tid: string\n\ttype: NodeType\n\tlabel?: string\n\tx: number\n\ty: number\n}\n\nexport interface IEdge {\n\tid: string\n\ttype: EdgeType\n\tsource: INode\n\ttarget: INode\n}\n\nexport type Elements = { nodes: INode[]; edges: IEdge[] }\n","import{options as r,Fragment as e}from\"preact\";export{Fragment}from\"preact\";var t=/[\"&<]/;function n(r){if(0===r.length||!1===t.test(r))return r;for(var e=0,n=0,o=\"\",f=\"\";n<r.length;n++){switch(r.charCodeAt(n)){case 34:f=\"&quot;\";break;case 38:f=\"&amp;\";break;case 60:f=\"&lt;\";break;default:continue}n!==e&&(o+=r.slice(e,n)),o+=f,e=n+1}return n!==e&&(o+=r.slice(e,n)),o}var o=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,f=0,i=Array.isArray;function u(e,t,n,o,i,u){var a,c,p={};for(c in t)\"ref\"==c?a=t[c]:p[c]=t[c];var l={type:e,props:p,key:n,ref:a,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:--f,__i:-1,__u:0,__source:i,__self:u};if(\"function\"==typeof e&&(a=e.defaultProps))for(c in a)void 0===p[c]&&(p[c]=a[c]);return r.vnode&&r.vnode(l),l}function a(r){var t=u(e,{tpl:r,exprs:[].slice.call(arguments,1)});return t.key=t.__v,t}var c={},p=/[A-Z]/g;function l(e,t){if(r.attr){var f=r.attr(e,t);if(\"string\"==typeof f)return f}if(\"ref\"===e||\"key\"===e)return\"\";if(\"style\"===e&&\"object\"==typeof t){var i=\"\";for(var u in t){var a=t[u];if(null!=a&&\"\"!==a){var l=\"-\"==u[0]?u:c[u]||(c[u]=u.replace(p,\"-$&\").toLowerCase()),_=\";\";\"number\"!=typeof a||l.startsWith(\"--\")||o.test(l)||(_=\"px;\"),i=i+l+\":\"+a+_}}return e+'=\"'+i+'\"'}return null==t||!1===t||\"function\"==typeof t||\"object\"==typeof t?\"\":!0===t?e:e+'=\"'+n(t)+'\"'}function _(r){if(null==r||\"boolean\"==typeof r||\"function\"==typeof r)return null;if(\"object\"==typeof r){if(void 0===r.constructor)return r;if(i(r)){for(var e=0;e<r.length;e++)r[e]=_(r[e]);return r}}return n(\"\"+r)}export{u as jsx,l as jsxAttr,u as jsxDEV,_ as jsxEscape,a as jsxTemplate,u as jsxs};\n//# sourceMappingURL=jsxRuntime.module.js.map\n","import type { EdgeProps } from '$lib/types'\nimport styles from './edge.module.css'\n\nexport const EdgeCommon = ({ x1, y1, x2, y2 }: EdgeProps) => {\n  return (\n    <g class={styles.edge}>\n      <path d={`M ${x1} ${y1} L ${x2} ${y2}`} stroke-width='8' class={styles.stroke} />\n      <path d={`M ${x1} ${y1} L ${x2} ${y2}`} stroke-width='5' class={styles.fill} />\n      <path d={`M ${x1} ${y1} L ${x2} ${y2}`} stroke-width='2' class={styles.stroke} stroke-dasharray='14 14' />\n    </g>\n  )\n}\n","import { EdgeType } from '$lib/types'\nimport { EdgeCommon } from './edge-common'\nimport styles from './edge.module.css'\n\nconst EDGE_TYPES = {\n  [EdgeType.UCommon]: EdgeCommon,\n  [EdgeType.DCommon]: EdgeCommon,\n  [EdgeType.UCommonConst]: EdgeCommon,\n  [EdgeType.DCommonConst]: EdgeCommon,\n  [EdgeType.UCommonVar]: EdgeCommon,\n  [EdgeType.DCommonVar]: EdgeCommon,\n  [EdgeType.Access]: EdgeCommon,\n  [EdgeType.AccessConstPosPerm]: EdgeCommon,\n  [EdgeType.AccessConstNegPerm]: EdgeCommon,\n  [EdgeType.AccessConstFuzPerm]: EdgeCommon,\n  [EdgeType.AccessConstPosTemp]: EdgeCommon,\n  [EdgeType.AccessConstNegTemp]: EdgeCommon,\n  [EdgeType.AccessConstFuzTemp]: EdgeCommon,\n  [EdgeType.AccessVarPosPerm]: EdgeCommon,\n  [EdgeType.AccessVarNegPerm]: EdgeCommon,\n  [EdgeType.AccessVarFuzPerm]: EdgeCommon,\n  [EdgeType.AccessVarPosTemp]: EdgeCommon,\n  [EdgeType.AccessVarNegTemp]: EdgeCommon,\n  [EdgeType.AccessVarFuzTemp]: EdgeCommon,\n}\n\ninterface Props {\n  type: EdgeType\n  noselect?: boolean\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n  mousedown?: (e: MouseEvent) => void\n  mouseup?: (e: MouseEvent) => void\n}\n\nexport const Edge = ({ type, noselect = false, x1 = 0, y1 = 0, x2 = 0, y2 = 0, mousedown, mouseup }: Props) => {\n  const MyEdge = EDGE_TYPES[type]\n\n  return (\n    <g class={`${styles.container} ${noselect ? styles.noselect : ''}`} onMouseDown={mousedown} onMouseUp={mouseup}>\n      <path d={`M ${x1} ${y1} L ${x2} ${y2}`} stroke-width='35' stroke='transparent' />\n      <MyEdge x1={x1} y1={y1} x2={x2} y2={y2} noselect={noselect} />\n    </g>\n  )\n}\n","export const Alphabet = () => (\n  <defs>\n    <circle id='scgg.node.const.outer' cx='0' cy='0' r='10' />\n    <rect id='scgg.node.var.outer' width='20' height='20' x='-10' y='-10' />\n\n    {/* <!-- define constant nodes --> */}\n    <g id='scgg.node.unknown'>\n      <circle cx='0' cy='0' r='2.5' stroke-width='5' />\n    </g>\n\n    <g id='scgg.node.const'>\n      <use xlinkHref='#scgg.node.const.outer' />\n    </g>\n\n    <g id='scgg.node.const.tuple'>\n      <use xlinkHref='#scgg.node.const.outer' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' />\n    </g>\n\n    <g id='scgg.node.const.struct'>\n      <use xlinkHref='#scgg.node.const.outer' />\n      <circle cx='0' cy='0' r='1.5' stroke-width='3' />\n    </g>\n\n    <g id='scgg.node.const.role'>\n      <use xlinkHref='#scgg.node.const.outer' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' />\n      <line x1='0' x2='0' y1='-10' y2='10' stroke-width='3px' />\n    </g>\n\n    <g id='scgg.node.const.norole'>\n      <use xlinkHref='#scgg.node.const.outer' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' transform='rotate(45, 0, 0)' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' transform='rotate(-45, 0, 0)' />\n    </g>\n\n    <g id='scgg.node.const.class'>\n      <use xlinkHref='#scgg.node.const.outer' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' transform='rotate(45, 0, 0)' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' transform='rotate(-45, 0, 0)' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' />\n    </g>\n\n    <g id='scgg.node.const.abstract'>\n      <use xlinkHref='#scgg.node.const.outer' />\n      <g stroke-width='1px '>\n        <line x1='-10' x2='10' y1='-6' y2='-6' />\n        <line x1='-10' x2='10' y1='-3' y2='-3' />\n        <line x1='-10' x2='10' y1='0' y2='0' />\n        <line x1='-10' x2='10' y1='3' y2='3' />\n        <line x1='-10' x2='10' y1='6' y2='6' />\n      </g>\n    </g>\n\n    <g id='scgg.node.const.material'>\n      <use xlinkHref='#scgg.node.const.outer' />\n      <g stroke-width='1px' transform='rotate(-45, 0, 0)'>\n        <line x1='-10' x2='10' y1='-6' y2='-6' />\n        <line x1='-10' x2='10' y1='-3' y2='-3' />\n        <line x1='-10' x2='10' y1='0' y2='0' />\n        <line x1='-10' x2='10' y1='3' y2='3' />\n        <line x1='-10' x2='10' y1='6' y2='6' />\n      </g>\n    </g>\n\n    {/* <!-- define variable nodes --> */}\n    <g id='scgg.node.var'>\n      <use xlinkHref='#scgg.node.var.outer' />\n    </g>\n\n    <g id='scgg.node.var.tuple'>\n      <use xlinkHref='#scgg.node.var.outer' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' />\n    </g>\n\n    <g id='scgg.node.var.struct'>\n      <use xlinkHref='#scgg.node.var.outer' />\n      <circle cx='0' cy='0' r='1.5' stroke-width='3' />\n    </g>\n\n    <g id='scgg.node.var.role'>\n      <use xlinkHref='#scgg.node.var.outer' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' />\n      <line x1='0' x2='0' y1='-10' y2='10' stroke-width='3px' />\n    </g>\n\n    <g id='scgg.node.var.norole'>\n      <use xlinkHref='#scgg.node.var.outer' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' transform='rotate(45, 0, 0)' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' transform='rotate(-45, 0, 0)' />\n    </g>\n\n    <g id='scgg.node.var.class'>\n      <use xlinkHref='#scgg.node.var.outer' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' transform='rotate(45, 0, 0)' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' transform='rotate(-45, 0, 0)' />\n      <line x1='-10' x2='10' y1='0' y2='0' stroke-width='3px' />\n    </g>\n\n    <g id='scgg.node.var.abstract'>\n      <use xlinkHref='#scgg.node.var.outer' />\n      <g stroke-width='1px'>\n        <line x1='-10' x2='10' y1='-6' y2='-6' />\n        <line x1='-10' x2='10' y1='-3' y2='-3' />\n        <line x1='-10' x2='10' y1='0' y2='0' />\n        <line x1='-10' x2='10' y1='3' y2='3' />\n        <line x1='-10' x2='10' y1='6' y2='6' />\n      </g>\n    </g>\n\n    <g id='scgg.node.var.material'>\n      <use xlinkHref='#scgg.node.var.outer' />\n      <g stroke-width='1px' transform='rotate(-45, 0, 0)'>\n        <line x1='-10' x2='10' y1='-6' y2='-6' />\n        <line x1='-10' x2='10' y1='-3' y2='-3' />\n        <line x1='-10' x2='10' y1='0' y2='0' />\n        <line x1='-10' x2='10' y1='3' y2='3' />\n        <line x1='-10' x2='10' y1='6' y2='6' />\n      </g>\n    </g>\n\n    {/* <!-- arcs --> */}\n    <marker id='scgg.target.arrow' viewBox='0 -5 10 10' refX='8' markerWidth='7' markerHeight='10' orient='auto'>\n      <path d='M0,-4L10,0L0,4' fill='#000' />\n    </marker>\n\n    <marker id='end-arrow-access' viewBox='0 -5 10 10' refX='0' markerWidth='5' markerHeight='10' orient='auto'>\n      <path d='M0,-4L10,0L0,4' />\n    </marker>\n\n    <marker id='end-arrow-common' viewBox='0 -5 10 10' refX='0' markerWidth='2' markerHeight='6' orient='auto'>\n      <path d='M0,-4L10,0L0,4' />\n    </marker>\n  </defs>\n)\n","import { NodeType } from '$lib/types'\nimport style from './node.module.css'\n\ninterface Props {\n  type: NodeType\n  x: number\n  y: number\n  label?: string\n  noring?: boolean\n  mousedown?: (e: MouseEvent) => void\n  mouseup?: (e: MouseEvent) => void\n  textDoubleClick?: () => void\n  highlight?: boolean\n}\n\nexport const Node = ({ type, x, y, label, noring, mousedown, mouseup, textDoubleClick, highlight }: Props) => {\n  return (\n    <>\n      <g class={`${style.container} ${highlight ? style.highlight : ''}`} onMouseDown={mousedown} onMouseUp={mouseup}>\n        {!noring && <circle cx={x} cy={y} r='35' fill='transparent' />}\n        <use class={style.node} xlinkHref={`#scgg.node.${type}`} x={x} y={y} />\n      </g>\n      {label && (\n        <text x={x + 17} y={y + 21} class={style.text} onDblClick={textDoubleClick}>\n          {label}\n        </text>\n      )}\n    </>\n  )\n}\n","import { EdgeType, NodeType } from '$lib/types'\n\nconst nodeTypes = [\n  NodeType.Const,\n  NodeType.ConstClass,\n  NodeType.ConstStruct,\n  NodeType.ConstTuple,\n  NodeType.Unknown,\n  NodeType.VarTuple,\n  NodeType.VarStruct,\n  NodeType.VarClass,\n  NodeType.Var\n]\n\nconst edgeTypes = [\n  EdgeType.AccessConstPosPerm,\n  EdgeType.UCommon,\n  EdgeType.DCommon,\n  EdgeType.DCommonVar,\n  EdgeType.UCommonVar,\n  EdgeType.AccessVarPosPerm,\n]\n\nexport const nodeOptions = nodeTypes.map((type, index, a) => {\n  const deg = (2 * Math.PI) / a.length\n  return {\n    type,\n    x1: Math.round(700 * Math.sin(deg * index)) / 10,\n    y1: Math.round(700 * -Math.cos(deg * index)) / 10,\n    x2: Math.round(700 * Math.sin(deg * (index + 1))) / 10,\n    y2: Math.round(700 * -Math.cos(deg * (index + 1))) / 10,\n    textX: Math.round(990 * Math.sin(0.12 + deg * index)) / 10 - 4,\n    textY: Math.round(990 * -Math.cos(0.12 + deg * index)) / 10 + 6,\n    nodeX: Math.round(740 * Math.sin(0.35 + deg * index)) / 10,\n    nodeY: Math.round(740 * -Math.cos(0.35 + deg * index)) / 10\n  }\n})\n\nexport const edgeOptions = edgeTypes.map((type, index, a) => {\n  const deg = (2 * Math.PI) / a.length\n  return {\n    type,\n    x1: Math.round(700 * Math.sin(deg * index)) / 10,\n    y1: Math.round(700 * -Math.cos(deg * index)) / 10,\n    x2: Math.round(700 * Math.sin(deg * (index + 1))) / 10,\n    y2: Math.round(700 * -Math.cos(deg * (index + 1))) / 10,\n    textX: Math.round(990 * Math.sin(0.12 + deg * index)) / 10 - 4,\n    textY: Math.round(990 * -Math.cos(0.12 + deg * index)) / 10 + 6,\n    edgeX1: Math.round(900 * Math.sin(0.52 + deg * index)) / 10,\n    edgeY1: Math.round(900 * -Math.cos(0.52 + deg * index)) / 10,\n    edgeX2: Math.round(450 * Math.sin(0.52 + deg * index)) / 10,\n    edgeY2: Math.round(450 * -Math.cos(0.52 + deg * index)) / 10\n  }\n})","import { useSignal } from '@preact/signals'\nimport { DeepSignal, shallow, useDeepSignal } from 'deepsignal'\nimport { useLayoutEffect, useMemo, useRef } from 'preact/hooks'\nimport { EdgeType, NodeType, type Elements, type IEdge, type INode } from '../types'\nimport { Edge } from './alphabet/edges/edge'\nimport { Alphabet } from './alphabet/nodes/alphabet'\nimport { Node } from './alphabet/nodes/node'\nimport style from './graph.module.css'\nimport { edgeOptions, nodeOptions } from './options'\n\nexport interface Props {\n  elements: DeepSignal<Elements>\n  addNode(node: DeepSignal<INode>): void\n  addEdge(edge: IEdge): void\n  width: number\n  height: number\n}\n\nexport const Graph = ({ elements, addNode, addEdge, width, height }: Props) => {\n  const centerX = useMemo(() => width / 2, [width])\n  const centerY = useMemo(() => height / 2, [height])\n\n  const movable = useDeepSignal({ x: 0, y: 0, zoom: 1, moving: false })\n  const moveStart = useRef({ x: 0, y: 0 })\n\n  const dragStart = useRef({ x: 0, y: 0 })\n  const selectedNode = useSignal<DeepSignal<INode> | undefined>(undefined)\n  const drawingEdge = useDeepSignal({ x: 0, y: 0, type: EdgeType.Access, drawing: false })\n\n  const selectable = useDeepSignal({\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    selecting: false,\n    dragging: false,\n    nodes: shallow(new Set<number>()),\n  })\n  const shiftIsHeld = useSignal(false)\n  const digitKeyHeld = useRef(-1)\n\n  // ==========================\n  // Node event listeners\n  // ==========================\n\n  function nodeMouseDown(node: DeepSignal<INode>, index: number, e: MouseEvent) {\n    if (selectedNode.value && drawingEdge.drawing) {\n      addEdge({\n        id: String(elements.edges.length + 10),\n        type: drawingEdge.type,\n        source: selectedNode.value,\n        target: node,\n      })\n      selectedNode.value = undefined\n      drawingEdge.drawing = false\n      e.stopPropagation()\n      return\n    }\n    dragStart.current.x = e.clientX\n    dragStart.current.y = e.clientY\n    if (selectable.nodes.size) {\n      if (selectable.nodes.has(index)) {\n        selectable.dragging = true\n        return\n      } else {\n        selectable.nodes.clear()\n      }\n    }\n    selectedNode.value = node\n  }\n\n  function nodeMouseUp(_node: DeepSignal<INode>, _e: MouseEvent) {\n    // if (selectable.nodes.size) {\n    // \te.stopPropagation()\n    // \treturn\n    // }\n    // e.stopPropagation()\n    // selectedNode = undefined\n  }\n\n  // ==========================\n  // Global event listeners\n  // ==========================\n\n  const timer = useRef<number>(0)\n  const firstClick = useRef<{ x: number; y: number } | undefined>(undefined)\n  const menu = useDeepSignal({ x: 0, y: 0, shown: false })\n\n  useLayoutEffect(() => {\n    document.addEventListener('mousemove', mousemove, true)\n    return () => {\n      document.removeEventListener('mousemove', mousemove, true)\n    }\n  }, [elements])\n\n  const showMenu = (e: MouseEvent) => {\n    if (selectedNode.value && !drawingEdge.drawing) {\n      menu.x = selectedNode.value.x * movable.zoom + centerX + movable.x\n      menu.y = selectedNode.value.y * movable.zoom + centerY + movable.y\n    } else {\n      menu.x = e.offsetX\n      menu.y = e.offsetY\n    }\n    menu.shown = true\n\n    if (digitKeyHeld.current !== -1) {\n      const options = (selectedNode.value && !drawingEdge.drawing) || selectable.nodes.size ? edgeOptions : nodeOptions\n      menuOptionClick(e, options[digitKeyHeld.current].type)\n    }\n  }\n\n  const mousedown = (e: MouseEvent) => {\n    e.preventDefault()\n    if (selectable.nodes.size && !selectable.dragging) {\n      selectable.nodes.clear()\n    }\n\n    if (!firstClick.current) {\n      firstClick.current = { x: e.clientX, y: e.clientY }\n      timer.current = self.setTimeout(() => (firstClick.current = undefined), 280)\n    } else {\n      firstClick.current = undefined\n      showMenu(e)\n    }\n\n    document.addEventListener('mouseup', mouseup, false)\n\n    if (!menu.shown && !e.shiftKey && !e.altKey && (e.metaKey || e.ctrlKey)) {\n      showMenu(e)\n      return\n    }\n\n    if (selectedNode.value && !drawingEdge.drawing) return\n    if (selectable.dragging) return\n\n    if (e.buttons === 1) {\n      if (e.shiftKey && !e.altKey && !e.ctrlKey && !e.metaKey) {\n        selectable.x1 = (e.offsetX - centerX - movable.x) / movable.zoom\n        selectable.y1 = (e.offsetY - centerY - movable.y) / movable.zoom\n        selectable.x2 = selectable.x1\n        selectable.y2 = selectable.y1\n        selectable.selecting = true\n      } else {\n        movable.moving = true\n      }\n      moveStart.current.x = e.clientX - movable.x\n      moveStart.current.y = e.clientY - movable.y\n    }\n  }\n\n  function mousemove(e: MouseEvent) {\n    if (menu.shown) return\n\n    if (!selectable.selecting && selectable.nodes.size) {\n      if (selectable.dragging) {\n        for (const index of selectable.nodes) {\n          elements.nodes[index].x += (e.clientX - dragStart.current.x) / movable.zoom\n          elements.nodes[index].y += (e.clientY - dragStart.current.y) / movable.zoom\n        }\n        dragStart.current.x = e.clientX\n        dragStart.current.y = e.clientY\n      }\n      return\n    }\n\n    if (\n      firstClick.current &&\n      (Math.abs(e.clientX - firstClick.current.x) > 50 ||\n        Math.abs(e.clientY - firstClick.current.y) > 50 ||\n        selectedNode.value)\n    ) {\n      self.clearTimeout(timer.current)\n      firstClick.current = undefined\n    }\n\n    if (selectedNode.value) {\n      if (drawingEdge.drawing) {\n        drawingEdge.x = (e.offsetX - centerX - movable.x) / movable.zoom\n        drawingEdge.y = (e.offsetY - centerY - movable.y) / movable.zoom\n      } else {\n        selectedNode.value.x += (e.clientX - dragStart.current.x) / movable.zoom\n        selectedNode.value.y += (e.clientY - dragStart.current.y) / movable.zoom\n      }\n      dragStart.current.x = e.clientX\n      dragStart.current.y = e.clientY\n    }\n\n    if (selectedNode.value && !drawingEdge.drawing) return\n    if (!movable.moving && !selectable.selecting) return\n\n    if (e.buttons === 1) {\n      const newMovableX = e.clientX - moveStart.current.x\n      const newMovableY = e.clientY - moveStart.current.y\n      if (selectable.selecting) {\n        selectable.x2 = (e.offsetX - centerX - movable.x) / movable.zoom\n        selectable.y2 = (e.offsetY - centerY - movable.y) / movable.zoom\n        selectable.nodes = shallow(\n          elements.nodes.reduce(\n            (a, node, index) => (\n              node.x >= Math.min(selectable.x1, selectable.x2) &&\n                node.x <= Math.max(selectable.x1, selectable.x2) &&\n                node.y >= Math.min(selectable.y1, selectable.y2) &&\n                node.y <= Math.max(selectable.y1, selectable.y2) &&\n                a.add(index),\n              a\n            ),\n            new Set<number>()\n          )\n        )\n      } else {\n        if (drawingEdge.drawing) {\n          drawingEdge.x += (movable.x - newMovableX) / movable.zoom\n          drawingEdge.y += (movable.y - newMovableY) / movable.zoom\n        }\n        movable.x = newMovableX\n        movable.y = newMovableY\n      }\n    }\n  }\n\n  function mouseup(_e: MouseEvent) {\n    if (!firstClick.current) clearTimeout(timer.current)\n    if (menu.shown) menu.shown = false\n\n    if (selectable.selecting) {\n      selectable.selecting = false\n      selectable.x1 = 0\n      selectable.y1 = 0\n      selectable.x2 = 0\n      selectable.y2 = 0\n    } else if (selectable.nodes.size) {\n      if (selectable.dragging) {\n        selectable.dragging = false\n      } else {\n        selectable.nodes.clear()\n      }\n    }\n\n    if (selectedNode.value) {\n      if (!drawingEdge.drawing) selectedNode.value = undefined\n      return\n    }\n    movable.moving = false\n    // moveStart.x = movable.x\n    // moveStart.y = movable.y\n\n    document.removeEventListener('mouseup', mouseup, false)\n  }\n\n  function wheel(e: WheelEvent) {\n    e.preventDefault()\n    if (selectedNode.value && !drawingEdge.drawing) return\n    if (e.ctrlKey) {\n      let deltaZoom = e.deltaY * 0.01\n      if (movable.zoom - deltaZoom < 0.1) deltaZoom = movable.zoom - 0.1\n      else if (movable.zoom - deltaZoom > 5) deltaZoom = movable.zoom - 5\n\n      movable.x += (deltaZoom / movable.zoom) * (e.offsetX - centerX - movable.x)\n      movable.y += (deltaZoom / movable.zoom) * (e.offsetY - centerY - movable.y)\n      movable.zoom -= deltaZoom\n    } else {\n      movable.x -= e.deltaX\n      movable.y -= e.deltaY\n      if (drawingEdge.drawing) {\n        drawingEdge.x += e.deltaX / movable.zoom\n        drawingEdge.y += e.deltaY / movable.zoom\n      }\n    }\n  }\n\n  function keydown(e: KeyboardEvent) {\n    if (e.key === 'Shift') {\n      shiftIsHeld.value = true\n      return\n    }\n\n    const isDigitKey = /^[1-9]$/.test(e.key)\n    if (isDigitKey) {\n      const digit = +e.key - 1\n\n      if (e.metaKey || e.ctrlKey) {\n        e.preventDefault()\n      }\n\n      if (menu.shown) {\n        const options =\n          (selectedNode.value && !drawingEdge.drawing) || selectable.nodes.size ? edgeOptions : nodeOptions\n        if (options[digit]) {\n          menuOptionClick(undefined, options[digit].type)\n        }\n      } else if (digitKeyHeld.current !== digit) {\n        digitKeyHeld.current = digit\n      }\n    }\n  }\n\n  function keyup(e: KeyboardEvent) {\n    if (e.key === 'Shift') {\n      shiftIsHeld.value = false\n      return\n    }\n\n    const isDigitKey = /^[1-9]$/.test(e.key)\n    if (isDigitKey || e.key === 'Meta') {\n      digitKeyHeld.current = -1\n    }\n  }\n\n  function mouseenter(_e: MouseEvent) {\n    document.addEventListener('keydown', keydown, false)\n    document.addEventListener('keyup', keyup, false)\n  }\n\n  function mouseleave(_e: MouseEvent) {\n    document.removeEventListener('keydown', keydown, false)\n    document.removeEventListener('keyup', keyup, false)\n  }\n\n  function menuOptionClick(e: MouseEvent | undefined, type: NodeType | EdgeType) {\n    e?.stopPropagation()\n    if (!menu.shown) return\n\n    if (((_: NodeType | EdgeType): _ is EdgeType => !drawingEdge.drawing && !!selectedNode.value)(type)) {\n      // Coords should be updated in mousemove to match cursor coords if set to -1\n      drawingEdge.x = e ? (e.offsetX - centerX - movable.x) / movable.zoom : selectedNode.value!.x\n      drawingEdge.y = e ? (e.offsetY - centerY - movable.y) / movable.zoom : selectedNode.value!.y\n      drawingEdge.type = type\n      drawingEdge.drawing = true\n\n      dragStart.current.x = e ? e.clientX : -1\n      dragStart.current.y = e ? e.clientY : -1\n      menu.shown = false\n      return\n    }\n\n    const newNode = {\n      id: String(elements.nodes.length + 10),\n      type,\n      x: (menu.x - centerX - movable.x) / movable.zoom,\n      y: (menu.y - centerY - movable.y) / movable.zoom,\n    }\n    addNode(newNode)\n\n    if (selectedNode.value && drawingEdge.drawing) {\n      addEdge({\n        id: String(elements.nodes.length + 10),\n        type: drawingEdge.type,\n        source: selectedNode.value,\n        target: newNode,\n      })\n      selectedNode.value = undefined\n      drawingEdge.drawing = false\n    }\n\n    menu.shown = false\n  }\n  return (\n    <div\n      class={style.graph}\n      data-moving={movable.moving ? '' : undefined}\n      data-dragging={selectedNode.value || selectable.nodes.size ? '' : undefined}\n      data-selecting={selectable.selecting || shiftIsHeld.value ? '' : undefined}\n    >\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        xmlnsXlink='http://www.w3.org/1999/xlink'\n        viewBox={`-${centerX} -${centerY} ${width} ${height}`}\n        width={`${width}px`}\n        height={`${height}px`}\n        onContextMenu={e => {\n          e.preventDefault()\n        }}\n        onMouseDown={mousedown}\n        onWheel={wheel} // nonpassive|preventDefault|stopPropagation\n        onMouseEnter={mouseenter}\n        onMouseLeave={mouseleave}\n      >\n        <Alphabet />\n\n        {elements && (\n          <g transform={`translate(${movable.x} ${movable.y}) scale(${movable.zoom})`}>\n            {/* <!-- Map edges to EdgeCommon component --> */}\n            {elements.edges.map(edge => (\n              <Edge\n                key={edge.id}\n                type={edge.type}\n                x1={edge.source.x}\n                y1={edge.source.y}\n                x2={edge.target.x}\n                y2={edge.target.y}\n              />\n            ))}\n\n            {/* <!-- Map nodes to Node component --> */}\n            {elements.nodes.map((node, index) => (\n              <Node\n                key={node.id}\n                type={node.type}\n                x={node.x}\n                y={node.y}\n                label={node.label}\n                mousedown={nodeMouseDown.bind(null, node, index)}\n                mouseup={nodeMouseUp.bind(null, node)}\n                highlight={selectable.nodes.has(index)}\n              />\n            ))}\n\n            {selectedNode.value && drawingEdge.drawing && (\n              <Edge\n                type={drawingEdge.type}\n                noselect\n                x1={selectedNode.value.x}\n                y1={selectedNode.value.y}\n                x2={drawingEdge.x}\n                y2={drawingEdge.y}\n              />\n            )}\n\n            {selectable.selecting && (\n              <rect\n                x={Math.min(selectable.x1, selectable.x2)}\n                y={Math.min(selectable.y1, selectable.y2)}\n                width={Math.abs(selectable.x1 - selectable.x2)}\n                height={Math.abs(selectable.y1 - selectable.y2)}\n                rx='1'\n                ry='1'\n                stroke-width='1'\n                fill='#0048b61a'\n                stroke='#2669cf'\n                pointer-events='none'\n              />\n            )}\n          </g>\n        )}\n\n        {menu.shown && (\n          <g transform={`translate(${menu.x - centerX} ${menu.y - centerY})`}>\n            <g class={style.menu}>\n              {(selectedNode.value && !drawingEdge.drawing) || selectable.nodes.size\n                ? edgeOptions.map(({ type, x1, y1, x2, y2, textX, textY, edgeX1, edgeY1, edgeX2, edgeY2 }, index) => (\n                    <g key={type} onMouseUp={e => menuOptionClick(e, type)}>\n                      <path d={`M ${x1} ${y1} A 70 70 0 0 1 ${x2} ${y2}`} stroke-width='90' />\n                      <text x={textX} y={textY} stroke-width='90'>\n                        {index + 1}\n                      </text>\n                      <Edge x1={edgeX1} y1={edgeY1} x2={edgeX2} y2={edgeY2} type={type} noselect />\n                    </g>\n                  ))\n                : nodeOptions.map(({ type, x1, y1, x2, y2, textX, textY, nodeX, nodeY }, index) => (\n                    <g key={type} onMouseUp={e => menuOptionClick(e, type)}>\n                      <path d={`M ${x1} ${y1} A 70 70 0 0 1 ${x2} ${y2}`} stroke-width='90' />\n                      <text x={textX} y={textY} stroke-width='90'>\n                        {index + 1}\n                      </text>\n                      <Node x={nodeX} y={nodeY} type={type} noring />\n                    </g>\n                  ))}\n            </g>\n          </g>\n        )}\n      </svg>\n    </div>\n  )\n}\n","import { render } from 'preact'\nexport { Graph, type Props as GraphProps } from './graph/graph'\nexport {\n  type INode as GraphNode,\n  type IEdge as GraphEdge,\n  type Elements as GraphElements,\n  NodeType,\n  EdgeType,\n} from './types'\n\nimport { Graph, Props } from './graph/graph'\nexport default (id: string, props: Props) => render(<Graph {...props} />, document.getElementById(id)!)\n\n// import { deepSignal, useDeepSignal } from 'deepsignal'\n// import { Elements } from './types'\n// export const useCreateGraph = () => useDeepSignal<Elements>({ nodes: [], edges: [] })\n// export const createGraph = () => deepSignal<Elements>({ nodes: [], edges: [] })\n"],"names":["NodeType","Unknown","Const","ConstTuple","ConstStruct","ConstRole","ConstNorole","ConstClass","ConstAbstract","ConstMaterial","Var","VarTuple","VarStruct","VarRole","VarNorole","VarClass","VarAbstract","VarMaterial","EdgeType","UCommon","DCommon","UCommonConst","DCommonConst","UCommonVar","DCommonVar","Access","AccessConstPosPerm","AccessConstNegPerm","AccessConstFuzPerm","AccessConstPosTemp","AccessConstNegTemp","AccessConstFuzTemp","AccessVarPosPerm","AccessVarNegPerm","AccessVarFuzPerm","AccessVarPosTemp","AccessVarNegTemp","AccessVarFuzTemp","f","u","e","t","n","o","i","a","c","p","l","r","EdgeCommon","x1","y1","x2","y2","_jsxs","class","styles","edge","children","_jsx","d","stroke","fill","EDGE_TYPES","Edge","type","noselect","mousedown","mouseup","MyEdge","container","onMouseDown","onMouseUp","Alphabet","id","cx","cy","width","height","x","y","xlinkHref","transform","viewBox","refX","markerWidth","markerHeight","orient","Node","label","noring","textDoubleClick","highlight","_Fragment","style","node","text","onDblClick","nodeTypes","edgeTypes","nodeOptions","map","index","deg","Math","PI","length","round","sin","cos","textX","textY","nodeX","nodeY","edgeOptions","edgeX1","edgeY1","edgeX2","edgeY2","Graph","elements","addNode","addEdge","centerX","useMemo","centerY","movable","useDeepSignal","zoom","moving","moveStart","useRef","dragStart","selectedNode","useSignal","undefined","drawingEdge","drawing","selectable","selecting","dragging","nodes","shallow","Set","shiftIsHeld","digitKeyHeld","nodeMouseDown","value","String","edges","source","target","stopPropagation","current","clientX","clientY","size","has","clear","nodeMouseUp","_node","_e","timer","firstClick","menu","shown","useLayoutEffect","addEventListener","mousemove","removeEventListener","showMenu","offsetX","offsetY","options","menuOptionClick","preventDefault","self","setTimeout","shiftKey","altKey","metaKey","ctrlKey","buttons","abs","clearTimeout","newMovableX","newMovableY","reduce","min","max","add","wheel","deltaZoom","deltaY","deltaX","keydown","key","test","digit","keyup","isDigitKey","mouseenter","mouseleave","_","newNode","graph","xmlns","xmlnsXlink","onContextMenu","onWheel","onMouseEnter","onMouseLeave","bind","rx","ry","props","render","document","getElementById"],"mappings":"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","x_google_ignoreList":[1]}